{"langchain_trace": {"_type": "wb_trace_tree", "model_hash": "87d42126492183fb", "model_dict_dumps": "{\"1_SQLDatabaseChain\": {\"inputs\": {\"query\": \"How many postings from from Govandi there?\"}, \"outputs\": {\"result\": \"There is 1 posting from Govandi.\"}, \"_kind\": \"SQLDatabaseChain\", \"2_LLMChain\": {\"inputs\": {\"input\": \"How many postings from from Govandi there?\\nSQLQuery:\", \"top_k\": \"5\", \"dialect\": \"sqlite\", \"table_info\": \"\\nCREATE TABLE account_customuser (\\n\\tid INTEGER NOT NULL, \\n\\tpassword VARCHAR(128) NOT NULL, \\n\\tlast_login DATETIME, \\n\\tis_superuser BOOLEAN NOT NULL, \\n\\tfirst_name VARCHAR(150) NOT NULL, \\n\\tlast_name VARCHAR(150) NOT NULL, \\n\\tis_staff BOOLEAN NOT NULL, \\n\\tis_active BOOLEAN NOT NULL, \\n\\tdate_joined DATETIME NOT NULL, \\n\\tusername VARCHAR(250) NOT NULL, \\n\\temail VARCHAR(250) NOT NULL, \\n\\tuser_type VARCHAR(10) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from account_customuser table:\\nid\\tpassword\\tlast_login\\tis_superuser\\tfirst_name\\tlast_name\\tis_staff\\tis_active\\tdate_joined\\tusername\\temail\\tuser_type\\n1\\tpbkdf2_sha256$600000$FgOg3JzQKsGeiFfanFVf8Y$QX3hjZX1NVk8LwSFfaZF0mcHg/KlP7bGj4v04XLOEt8=\\t2023-07-10 09:05:29.081575\\tTrue\\t\\t\\tTrue\\tTrue\\t2023-07-08 18:22:31.467093\\traj\\trajsingh08471@gmail.com\\t1\\n6\\tpbkdf2_sha256$600000$L71fucrnRwXSBtcWaEjzs0$JEQmi9HGuyx/YibaOEidIy42BqTiqSHk2g7DdWpQmJA=\\t2023-07-10 09:06:01.224383\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:01:15.881449\\tRaj\\treere@gmail.com\\t2\\n7\\tpbkdf2_sha256$600000$USB6yexgL8pZs1PWqrVmoX$e7GZVHlyS64MNH0qnL10hDjkrRPgAKjYvz/ufE7vvAI=\\t2023-07-10 06:31:35.581883\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:08:41.107546\\tSheetal\\tsheetal@gmail.com\\t1\\n*/\\n\\n\\nCREATE TABLE account_customuser_groups (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_groups table:\\nid\\tcustomuser_id\\tgroup_id\\n\\n*/\\n\\n\\nCREATE TABLE account_customuser_user_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_user_permissions table:\\nid\\tcustomuser_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobapplication (\\n\\tid INTEGER NOT NULL, \\n\\tresume VARCHAR(100) NOT NULL, \\n\\tapplication_date DATE NOT NULL, \\n\\tapplicant_id BIGINT NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id), \\n\\tFOREIGN KEY(applicant_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_jobapplication table:\\nid\\tresume\\tapplication_date\\tapplicant_id\\tjob_id\\n30\\tresumes/Black_and_Yellow_Professional_CV_Resume_qMjzEZg.pdf\\t2023-07-10\\t6\\t1\\n31\\tresumes/Black_and_Yellow_Professional_CV_Resume_Xwxj1kN.pdf\\t2023-07-10\\t6\\t1\\n32\\tresumes/Black_and_Yellow_Professional_CV_Resume_qljBJQ4.pdf\\t2023-07-10\\t6\\t1\\n*/\\n\\n\\nCREATE TABLE account_jobinsightdata (\\n\\tid INTEGER NOT NULL, \\n\\tcsv_file VARCHAR(100) NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id)\\n)\\n\\n/*\\n3 rows from account_jobinsightdata table:\\nid\\tcsv_file\\tjob_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobpost (\\n\\tid INTEGER NOT NULL, \\n\\tjob_title VARCHAR(250) NOT NULL, \\n\\tjob_description TEXT NOT NULL, \\n\\tjob_location VARCHAR(250) NOT NULL, \\n\\tjob_salary VARCHAR(250) NOT NULL, \\n\\tjob_experience VARCHAR(250) NOT NULL, \\n\\tjob_qualification VARCHAR(250) NOT NULL, \\n\\tjob_posted_on DATE NOT NULL, \\n\\tjob_type VARCHAR(250) NOT NULL, \\n\\tjob_posted_by_id BIGINT NOT NULL, \\n\\tjob_data TEXT, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_posted_by_id) REFERENCES account_customuser (id), \\n\\tCHECK ((JSON_VALID(\\\"job_data\\\") OR \\\"job_data\\\" IS NULL)))\\n)\\n\\n/*\\n3 rows from account_jobpost table:\\nid\\tjob_title\\tjob_description\\tjob_location\\tjob_salary\\tjob_experience\\tjob_qualification\\tjob_posted_on\\tjob_type\\tjob_posted_by_id\\tjob_data\\n1\\tDjango Developer\\tI need a Django Developer\\tGovandi\\t45000\\t5+\\t5 years in Django\\t2023-07-09\\tPart-time\\t7\\tNone\\n*/\\n\\n\\nCREATE TABLE auth_group (\\n\\tid INTEGER NOT NULL, \\n\\tname VARCHAR(150) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from auth_group table:\\nid\\tname\\n\\n*/\\n\\n\\nCREATE TABLE auth_group_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id)\\n)\\n\\n/*\\n3 rows from auth_group_permissions table:\\nid\\tgroup_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE auth_permission (\\n\\tid INTEGER NOT NULL, \\n\\tcontent_type_id INTEGER NOT NULL, \\n\\tcodename VARCHAR(100) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id)\\n)\\n\\n/*\\n3 rows from auth_permission table:\\nid\\tcontent_type_id\\tcodename\\tname\\n1\\t1\\tadd_logentry\\tCan add log entry\\n2\\t1\\tchange_logentry\\tCan change log entry\\n3\\t1\\tdelete_logentry\\tCan delete log entry\\n*/\\n\\n\\nCREATE TABLE django_admin_log (\\n\\tid INTEGER NOT NULL, \\n\\tobject_id TEXT, \\n\\tobject_repr VARCHAR(200) NOT NULL, \\n\\taction_flag INTEGER NOT NULL, \\n\\tchange_message TEXT NOT NULL, \\n\\tcontent_type_id INTEGER, \\n\\tuser_id BIGINT NOT NULL, \\n\\taction_time DATETIME NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(user_id) REFERENCES account_customuser (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id), \\n\\tCHECK (\\\"action_flag\\\" >= 0), \\\"change_message\\\" text NOT NULL, \\\"content_type_id\\\" integer NULL REFERENCES \\\"django_content_type\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"user_id\\\" bigint NOT NULL REFERENCES \\\"account_customuser\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"action_time\\\" datetime NOT NULL)\\n)\\n\\n/*\\n3 rows from django_admin_log table:\\nid\\tobject_id\\tobject_repr\\taction_flag\\tchange_message\\tcontent_type_id\\tuser_id\\taction_time\\n1\\t2\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:49:40.506625\\n2\\t3\\tRak\\t3\\t\\t6\\t1\\t2023-07-09 06:55:29.607780\\n3\\t4\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:58:11.227619\\n*/\\n\\n\\nCREATE TABLE django_content_type (\\n\\tid INTEGER NOT NULL, \\n\\tapp_label VARCHAR(100) NOT NULL, \\n\\tmodel VARCHAR(100) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_content_type table:\\nid\\tapp_label\\tmodel\\n1\\tadmin\\tlogentry\\n2\\tauth\\tpermission\\n3\\tauth\\tgroup\\n*/\\n\\n\\nCREATE TABLE django_migrations (\\n\\tid INTEGER NOT NULL, \\n\\tapp VARCHAR(255) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tapplied DATETIME NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_migrations table:\\nid\\tapp\\tname\\tapplied\\n1\\tcontenttypes\\t0001_initial\\t2023-07-08 18:16:49.349262\\n2\\tcontenttypes\\t0002_remove_content_type_name\\t2023-07-08 18:16:49.364222\\n3\\tauth\\t0001_initial\\t2023-07-08 18:16:49.384214\\n*/\\n\\n\\nCREATE TABLE django_session (\\n\\tsession_key VARCHAR(40) NOT NULL, \\n\\tsession_data TEXT NOT NULL, \\n\\texpire_date DATETIME NOT NULL, \\n\\tPRIMARY KEY (session_key)\\n)\\n\\n/*\\n3 rows from django_session table:\\nsession_key\\tsession_data\\texpire_date\\nmtm5nhhp9cynbtklsc31cqhvj83gasmd\\t.eJxVjEEOwiAQRe_C2hCGKWJduu8ZyAxDpWogKe3KeHfbpAvdvvf-f6tA65LD2tIcJlFX5dXplzHFZyq7kAeVe9WxlmWeWO-JPmz\\t2023-07-23 15:11:31.450731\\nffdn0e0f0sppmenlq1vqbbgwwjjuvxvs\\t.eJxVjDsOwjAQBe_iGlnW-k9Jzxms3bWDA8iW4qRC3B0ipYD2zcx7iYTbWtM2ypLmLM4iiNPvRsiP0naQ79huXXJv6zKT3BV50CG\\t2023-07-24 05:41:11.239800\\n33wsqwjt8057at7bi0zfx1063zmvsbim\\t.eJxVjEEOwiAQRe_C2hBmiiAu3XuGZmAGqRpISrsy3l2bdKHb_977LzXSupRx7TKPE6uzAnX43SKlh9QN8J3qrenU6jJPUW-K3mn\\t2023-07-24 05:43:32.696079\\n*/\", \"stop\": [\"\\nSQLResult:\"]}, \"outputs\": {\"text\": \" SELECT COUNT(*) FROM account_jobpost WHERE job_location = 'Govandi';\"}, \"_kind\": \"LLMChain\", \"llm\": {\"_kind\": \"OpenAI\", \"temperature\": 0.0, \"verbose\": true}, \"prompt\": {\"_kind\": \"PromptTemplate\", \"input_variables\": [\"input\", \"table_info\", \"top_k\"], \"template\": \"You are a SQLite expert. Given an input question, first create a syntactically correct SQLite query to run, then look at the results of the query and return the answer to the input question.\\nUnless the user specifies in the question a specific number of examples to obtain, query for at most {top_k} results using the LIMIT clause as per SQLite. You can order the results to return the most informative data in the database.\\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in double quotes (\\\") to denote them as delimited identifiers.\\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\\nPay attention to use date('now') function to get the current date, if the question involves \\\"today\\\".\\n\\nUse the following format:\\n\\nQuestion: Question here\\nSQLQuery: SQL Query to run\\nSQLResult: Result of the SQLQuery\\nAnswer: Final answer here\\n\\nOnly use the following tables:\\n{table_info}\\n\\nQuestion: {input}\", \"template_format\": \"f-string\"}, \"3_OpenAI\": {\"inputs\": {\"prompts\": [\"You are a SQLite expert. Given an input question, first create a syntactically correct SQLite query to run, then look at the results of the query and return the answer to the input question.\\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per SQLite. You can order the results to return the most informative data in the database.\\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in double quotes (\\\") to denote them as delimited identifiers.\\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\\nPay attention to use date('now') function to get the current date, if the question involves \\\"today\\\".\\n\\nUse the following format:\\n\\nQuestion: Question here\\nSQLQuery: SQL Query to run\\nSQLResult: Result of the SQLQuery\\nAnswer: Final answer here\\n\\nOnly use the following tables:\\n\\nCREATE TABLE account_customuser (\\n\\tid INTEGER NOT NULL, \\n\\tpassword VARCHAR(128) NOT NULL, \\n\\tlast_login DATETIME, \\n\\tis_superuser BOOLEAN NOT NULL, \\n\\tfirst_name VARCHAR(150) NOT NULL, \\n\\tlast_name VARCHAR(150) NOT NULL, \\n\\tis_staff BOOLEAN NOT NULL, \\n\\tis_active BOOLEAN NOT NULL, \\n\\tdate_joined DATETIME NOT NULL, \\n\\tusername VARCHAR(250) NOT NULL, \\n\\temail VARCHAR(250) NOT NULL, \\n\\tuser_type VARCHAR(10) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from account_customuser table:\\nid\\tpassword\\tlast_login\\tis_superuser\\tfirst_name\\tlast_name\\tis_staff\\tis_active\\tdate_joined\\tusername\\temail\\tuser_type\\n1\\tpbkdf2_sha256$600000$FgOg3JzQKsGeiFfanFVf8Y$QX3hjZX1NVk8LwSFfaZF0mcHg/KlP7bGj4v04XLOEt8=\\t2023-07-10 09:05:29.081575\\tTrue\\t\\t\\tTrue\\tTrue\\t2023-07-08 18:22:31.467093\\traj\\trajsingh08471@gmail.com\\t1\\n6\\tpbkdf2_sha256$600000$L71fucrnRwXSBtcWaEjzs0$JEQmi9HGuyx/YibaOEidIy42BqTiqSHk2g7DdWpQmJA=\\t2023-07-10 09:06:01.224383\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:01:15.881449\\tRaj\\treere@gmail.com\\t2\\n7\\tpbkdf2_sha256$600000$USB6yexgL8pZs1PWqrVmoX$e7GZVHlyS64MNH0qnL10hDjkrRPgAKjYvz/ufE7vvAI=\\t2023-07-10 06:31:35.581883\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:08:41.107546\\tSheetal\\tsheetal@gmail.com\\t1\\n*/\\n\\n\\nCREATE TABLE account_customuser_groups (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_groups table:\\nid\\tcustomuser_id\\tgroup_id\\n\\n*/\\n\\n\\nCREATE TABLE account_customuser_user_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_user_permissions table:\\nid\\tcustomuser_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobapplication (\\n\\tid INTEGER NOT NULL, \\n\\tresume VARCHAR(100) NOT NULL, \\n\\tapplication_date DATE NOT NULL, \\n\\tapplicant_id BIGINT NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id), \\n\\tFOREIGN KEY(applicant_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_jobapplication table:\\nid\\tresume\\tapplication_date\\tapplicant_id\\tjob_id\\n30\\tresumes/Black_and_Yellow_Professional_CV_Resume_qMjzEZg.pdf\\t2023-07-10\\t6\\t1\\n31\\tresumes/Black_and_Yellow_Professional_CV_Resume_Xwxj1kN.pdf\\t2023-07-10\\t6\\t1\\n32\\tresumes/Black_and_Yellow_Professional_CV_Resume_qljBJQ4.pdf\\t2023-07-10\\t6\\t1\\n*/\\n\\n\\nCREATE TABLE account_jobinsightdata (\\n\\tid INTEGER NOT NULL, \\n\\tcsv_file VARCHAR(100) NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id)\\n)\\n\\n/*\\n3 rows from account_jobinsightdata table:\\nid\\tcsv_file\\tjob_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobpost (\\n\\tid INTEGER NOT NULL, \\n\\tjob_title VARCHAR(250) NOT NULL, \\n\\tjob_description TEXT NOT NULL, \\n\\tjob_location VARCHAR(250) NOT NULL, \\n\\tjob_salary VARCHAR(250) NOT NULL, \\n\\tjob_experience VARCHAR(250) NOT NULL, \\n\\tjob_qualification VARCHAR(250) NOT NULL, \\n\\tjob_posted_on DATE NOT NULL, \\n\\tjob_type VARCHAR(250) NOT NULL, \\n\\tjob_posted_by_id BIGINT NOT NULL, \\n\\tjob_data TEXT, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_posted_by_id) REFERENCES account_customuser (id), \\n\\tCHECK ((JSON_VALID(\\\"job_data\\\") OR \\\"job_data\\\" IS NULL)))\\n)\\n\\n/*\\n3 rows from account_jobpost table:\\nid\\tjob_title\\tjob_description\\tjob_location\\tjob_salary\\tjob_experience\\tjob_qualification\\tjob_posted_on\\tjob_type\\tjob_posted_by_id\\tjob_data\\n1\\tDjango Developer\\tI need a Django Developer\\tGovandi\\t45000\\t5+\\t5 years in Django\\t2023-07-09\\tPart-time\\t7\\tNone\\n*/\\n\\n\\nCREATE TABLE auth_group (\\n\\tid INTEGER NOT NULL, \\n\\tname VARCHAR(150) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from auth_group table:\\nid\\tname\\n\\n*/\\n\\n\\nCREATE TABLE auth_group_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id)\\n)\\n\\n/*\\n3 rows from auth_group_permissions table:\\nid\\tgroup_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE auth_permission (\\n\\tid INTEGER NOT NULL, \\n\\tcontent_type_id INTEGER NOT NULL, \\n\\tcodename VARCHAR(100) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id)\\n)\\n\\n/*\\n3 rows from auth_permission table:\\nid\\tcontent_type_id\\tcodename\\tname\\n1\\t1\\tadd_logentry\\tCan add log entry\\n2\\t1\\tchange_logentry\\tCan change log entry\\n3\\t1\\tdelete_logentry\\tCan delete log entry\\n*/\\n\\n\\nCREATE TABLE django_admin_log (\\n\\tid INTEGER NOT NULL, \\n\\tobject_id TEXT, \\n\\tobject_repr VARCHAR(200) NOT NULL, \\n\\taction_flag INTEGER NOT NULL, \\n\\tchange_message TEXT NOT NULL, \\n\\tcontent_type_id INTEGER, \\n\\tuser_id BIGINT NOT NULL, \\n\\taction_time DATETIME NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(user_id) REFERENCES account_customuser (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id), \\n\\tCHECK (\\\"action_flag\\\" >= 0), \\\"change_message\\\" text NOT NULL, \\\"content_type_id\\\" integer NULL REFERENCES \\\"django_content_type\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"user_id\\\" bigint NOT NULL REFERENCES \\\"account_customuser\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"action_time\\\" datetime NOT NULL)\\n)\\n\\n/*\\n3 rows from django_admin_log table:\\nid\\tobject_id\\tobject_repr\\taction_flag\\tchange_message\\tcontent_type_id\\tuser_id\\taction_time\\n1\\t2\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:49:40.506625\\n2\\t3\\tRak\\t3\\t\\t6\\t1\\t2023-07-09 06:55:29.607780\\n3\\t4\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:58:11.227619\\n*/\\n\\n\\nCREATE TABLE django_content_type (\\n\\tid INTEGER NOT NULL, \\n\\tapp_label VARCHAR(100) NOT NULL, \\n\\tmodel VARCHAR(100) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_content_type table:\\nid\\tapp_label\\tmodel\\n1\\tadmin\\tlogentry\\n2\\tauth\\tpermission\\n3\\tauth\\tgroup\\n*/\\n\\n\\nCREATE TABLE django_migrations (\\n\\tid INTEGER NOT NULL, \\n\\tapp VARCHAR(255) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tapplied DATETIME NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_migrations table:\\nid\\tapp\\tname\\tapplied\\n1\\tcontenttypes\\t0001_initial\\t2023-07-08 18:16:49.349262\\n2\\tcontenttypes\\t0002_remove_content_type_name\\t2023-07-08 18:16:49.364222\\n3\\tauth\\t0001_initial\\t2023-07-08 18:16:49.384214\\n*/\\n\\n\\nCREATE TABLE django_session (\\n\\tsession_key VARCHAR(40) NOT NULL, \\n\\tsession_data TEXT NOT NULL, \\n\\texpire_date DATETIME NOT NULL, \\n\\tPRIMARY KEY (session_key)\\n)\\n\\n/*\\n3 rows from django_session table:\\nsession_key\\tsession_data\\texpire_date\\nmtm5nhhp9cynbtklsc31cqhvj83gasmd\\t.eJxVjEEOwiAQRe_C2hCGKWJduu8ZyAxDpWogKe3KeHfbpAvdvvf-f6tA65LD2tIcJlFX5dXplzHFZyq7kAeVe9WxlmWeWO-JPmz\\t2023-07-23 15:11:31.450731\\nffdn0e0f0sppmenlq1vqbbgwwjjuvxvs\\t.eJxVjDsOwjAQBe_iGlnW-k9Jzxms3bWDA8iW4qRC3B0ipYD2zcx7iYTbWtM2ypLmLM4iiNPvRsiP0naQ79huXXJv6zKT3BV50CG\\t2023-07-24 05:41:11.239800\\n33wsqwjt8057at7bi0zfx1063zmvsbim\\t.eJxVjEEOwiAQRe_C2hBmiiAu3XuGZmAGqRpISrsy3l2bdKHb_977LzXSupRx7TKPE6uzAnX43SKlh9QN8J3qrenU6jJPUW-K3mn\\t2023-07-24 05:43:32.696079\\n*/\\n\\nQuestion: How many postings from from Govandi there?\\nSQLQuery:\"]}, \"outputs\": {\"generations\": [[{\"text\": \" SELECT COUNT(*) FROM account_jobpost WHERE job_location = 'Govandi';\", \"generation_info\": {\"finish_reason\": \"stop\", \"logprobs\": null}}]], \"llm_output\": {\"token_usage\": {\"total_tokens\": 3347, \"completion_tokens\": 19, \"prompt_tokens\": 3328}, \"model_name\": \"text-davinci-003\"}, \"run\": null}, \"_kind\": \"OpenAI\", \"temperature\": 0.0, \"verbose\": true}}, \"4_LLMChain\": {\"inputs\": {\"input\": \"How many postings from from Govandi there?\\nSQLQuery:SELECT COUNT(*) FROM account_jobpost WHERE job_location = 'Govandi';\\nSQLResult: [(1,)]\\nAnswer:\", \"top_k\": \"5\", \"dialect\": \"sqlite\", \"table_info\": \"\\nCREATE TABLE account_customuser (\\n\\tid INTEGER NOT NULL, \\n\\tpassword VARCHAR(128) NOT NULL, \\n\\tlast_login DATETIME, \\n\\tis_superuser BOOLEAN NOT NULL, \\n\\tfirst_name VARCHAR(150) NOT NULL, \\n\\tlast_name VARCHAR(150) NOT NULL, \\n\\tis_staff BOOLEAN NOT NULL, \\n\\tis_active BOOLEAN NOT NULL, \\n\\tdate_joined DATETIME NOT NULL, \\n\\tusername VARCHAR(250) NOT NULL, \\n\\temail VARCHAR(250) NOT NULL, \\n\\tuser_type VARCHAR(10) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from account_customuser table:\\nid\\tpassword\\tlast_login\\tis_superuser\\tfirst_name\\tlast_name\\tis_staff\\tis_active\\tdate_joined\\tusername\\temail\\tuser_type\\n1\\tpbkdf2_sha256$600000$FgOg3JzQKsGeiFfanFVf8Y$QX3hjZX1NVk8LwSFfaZF0mcHg/KlP7bGj4v04XLOEt8=\\t2023-07-10 09:05:29.081575\\tTrue\\t\\t\\tTrue\\tTrue\\t2023-07-08 18:22:31.467093\\traj\\trajsingh08471@gmail.com\\t1\\n6\\tpbkdf2_sha256$600000$L71fucrnRwXSBtcWaEjzs0$JEQmi9HGuyx/YibaOEidIy42BqTiqSHk2g7DdWpQmJA=\\t2023-07-10 09:06:01.224383\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:01:15.881449\\tRaj\\treere@gmail.com\\t2\\n7\\tpbkdf2_sha256$600000$USB6yexgL8pZs1PWqrVmoX$e7GZVHlyS64MNH0qnL10hDjkrRPgAKjYvz/ufE7vvAI=\\t2023-07-10 06:31:35.581883\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:08:41.107546\\tSheetal\\tsheetal@gmail.com\\t1\\n*/\\n\\n\\nCREATE TABLE account_customuser_groups (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_groups table:\\nid\\tcustomuser_id\\tgroup_id\\n\\n*/\\n\\n\\nCREATE TABLE account_customuser_user_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_user_permissions table:\\nid\\tcustomuser_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobapplication (\\n\\tid INTEGER NOT NULL, \\n\\tresume VARCHAR(100) NOT NULL, \\n\\tapplication_date DATE NOT NULL, \\n\\tapplicant_id BIGINT NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id), \\n\\tFOREIGN KEY(applicant_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_jobapplication table:\\nid\\tresume\\tapplication_date\\tapplicant_id\\tjob_id\\n30\\tresumes/Black_and_Yellow_Professional_CV_Resume_qMjzEZg.pdf\\t2023-07-10\\t6\\t1\\n31\\tresumes/Black_and_Yellow_Professional_CV_Resume_Xwxj1kN.pdf\\t2023-07-10\\t6\\t1\\n32\\tresumes/Black_and_Yellow_Professional_CV_Resume_qljBJQ4.pdf\\t2023-07-10\\t6\\t1\\n*/\\n\\n\\nCREATE TABLE account_jobinsightdata (\\n\\tid INTEGER NOT NULL, \\n\\tcsv_file VARCHAR(100) NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id)\\n)\\n\\n/*\\n3 rows from account_jobinsightdata table:\\nid\\tcsv_file\\tjob_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobpost (\\n\\tid INTEGER NOT NULL, \\n\\tjob_title VARCHAR(250) NOT NULL, \\n\\tjob_description TEXT NOT NULL, \\n\\tjob_location VARCHAR(250) NOT NULL, \\n\\tjob_salary VARCHAR(250) NOT NULL, \\n\\tjob_experience VARCHAR(250) NOT NULL, \\n\\tjob_qualification VARCHAR(250) NOT NULL, \\n\\tjob_posted_on DATE NOT NULL, \\n\\tjob_type VARCHAR(250) NOT NULL, \\n\\tjob_posted_by_id BIGINT NOT NULL, \\n\\tjob_data TEXT, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_posted_by_id) REFERENCES account_customuser (id), \\n\\tCHECK ((JSON_VALID(\\\"job_data\\\") OR \\\"job_data\\\" IS NULL)))\\n)\\n\\n/*\\n3 rows from account_jobpost table:\\nid\\tjob_title\\tjob_description\\tjob_location\\tjob_salary\\tjob_experience\\tjob_qualification\\tjob_posted_on\\tjob_type\\tjob_posted_by_id\\tjob_data\\n1\\tDjango Developer\\tI need a Django Developer\\tGovandi\\t45000\\t5+\\t5 years in Django\\t2023-07-09\\tPart-time\\t7\\tNone\\n*/\\n\\n\\nCREATE TABLE auth_group (\\n\\tid INTEGER NOT NULL, \\n\\tname VARCHAR(150) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from auth_group table:\\nid\\tname\\n\\n*/\\n\\n\\nCREATE TABLE auth_group_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id)\\n)\\n\\n/*\\n3 rows from auth_group_permissions table:\\nid\\tgroup_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE auth_permission (\\n\\tid INTEGER NOT NULL, \\n\\tcontent_type_id INTEGER NOT NULL, \\n\\tcodename VARCHAR(100) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id)\\n)\\n\\n/*\\n3 rows from auth_permission table:\\nid\\tcontent_type_id\\tcodename\\tname\\n1\\t1\\tadd_logentry\\tCan add log entry\\n2\\t1\\tchange_logentry\\tCan change log entry\\n3\\t1\\tdelete_logentry\\tCan delete log entry\\n*/\\n\\n\\nCREATE TABLE django_admin_log (\\n\\tid INTEGER NOT NULL, \\n\\tobject_id TEXT, \\n\\tobject_repr VARCHAR(200) NOT NULL, \\n\\taction_flag INTEGER NOT NULL, \\n\\tchange_message TEXT NOT NULL, \\n\\tcontent_type_id INTEGER, \\n\\tuser_id BIGINT NOT NULL, \\n\\taction_time DATETIME NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(user_id) REFERENCES account_customuser (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id), \\n\\tCHECK (\\\"action_flag\\\" >= 0), \\\"change_message\\\" text NOT NULL, \\\"content_type_id\\\" integer NULL REFERENCES \\\"django_content_type\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"user_id\\\" bigint NOT NULL REFERENCES \\\"account_customuser\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"action_time\\\" datetime NOT NULL)\\n)\\n\\n/*\\n3 rows from django_admin_log table:\\nid\\tobject_id\\tobject_repr\\taction_flag\\tchange_message\\tcontent_type_id\\tuser_id\\taction_time\\n1\\t2\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:49:40.506625\\n2\\t3\\tRak\\t3\\t\\t6\\t1\\t2023-07-09 06:55:29.607780\\n3\\t4\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:58:11.227619\\n*/\\n\\n\\nCREATE TABLE django_content_type (\\n\\tid INTEGER NOT NULL, \\n\\tapp_label VARCHAR(100) NOT NULL, \\n\\tmodel VARCHAR(100) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_content_type table:\\nid\\tapp_label\\tmodel\\n1\\tadmin\\tlogentry\\n2\\tauth\\tpermission\\n3\\tauth\\tgroup\\n*/\\n\\n\\nCREATE TABLE django_migrations (\\n\\tid INTEGER NOT NULL, \\n\\tapp VARCHAR(255) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tapplied DATETIME NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_migrations table:\\nid\\tapp\\tname\\tapplied\\n1\\tcontenttypes\\t0001_initial\\t2023-07-08 18:16:49.349262\\n2\\tcontenttypes\\t0002_remove_content_type_name\\t2023-07-08 18:16:49.364222\\n3\\tauth\\t0001_initial\\t2023-07-08 18:16:49.384214\\n*/\\n\\n\\nCREATE TABLE django_session (\\n\\tsession_key VARCHAR(40) NOT NULL, \\n\\tsession_data TEXT NOT NULL, \\n\\texpire_date DATETIME NOT NULL, \\n\\tPRIMARY KEY (session_key)\\n)\\n\\n/*\\n3 rows from django_session table:\\nsession_key\\tsession_data\\texpire_date\\nmtm5nhhp9cynbtklsc31cqhvj83gasmd\\t.eJxVjEEOwiAQRe_C2hCGKWJduu8ZyAxDpWogKe3KeHfbpAvdvvf-f6tA65LD2tIcJlFX5dXplzHFZyq7kAeVe9WxlmWeWO-JPmz\\t2023-07-23 15:11:31.450731\\nffdn0e0f0sppmenlq1vqbbgwwjjuvxvs\\t.eJxVjDsOwjAQBe_iGlnW-k9Jzxms3bWDA8iW4qRC3B0ipYD2zcx7iYTbWtM2ypLmLM4iiNPvRsiP0naQ79huXXJv6zKT3BV50CG\\t2023-07-24 05:41:11.239800\\n33wsqwjt8057at7bi0zfx1063zmvsbim\\t.eJxVjEEOwiAQRe_C2hBmiiAu3XuGZmAGqRpISrsy3l2bdKHb_977LzXSupRx7TKPE6uzAnX43SKlh9QN8J3qrenU6jJPUW-K3mn\\t2023-07-24 05:43:32.696079\\n*/\", \"stop\": [\"\\nSQLResult:\"]}, \"outputs\": {\"text\": \" There is 1 posting from Govandi.\"}, \"_kind\": \"LLMChain\", \"llm\": {\"_kind\": \"OpenAI\", \"temperature\": 0.0, \"verbose\": true}, \"prompt\": {\"_kind\": \"PromptTemplate\", \"input_variables\": [\"input\", \"table_info\", \"top_k\"], \"template\": \"You are a SQLite expert. Given an input question, first create a syntactically correct SQLite query to run, then look at the results of the query and return the answer to the input question.\\nUnless the user specifies in the question a specific number of examples to obtain, query for at most {top_k} results using the LIMIT clause as per SQLite. You can order the results to return the most informative data in the database.\\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in double quotes (\\\") to denote them as delimited identifiers.\\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\\nPay attention to use date('now') function to get the current date, if the question involves \\\"today\\\".\\n\\nUse the following format:\\n\\nQuestion: Question here\\nSQLQuery: SQL Query to run\\nSQLResult: Result of the SQLQuery\\nAnswer: Final answer here\\n\\nOnly use the following tables:\\n{table_info}\\n\\nQuestion: {input}\", \"template_format\": \"f-string\"}, \"5_OpenAI\": {\"inputs\": {\"prompts\": [\"You are a SQLite expert. Given an input question, first create a syntactically correct SQLite query to run, then look at the results of the query and return the answer to the input question.\\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per SQLite. You can order the results to return the most informative data in the database.\\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in double quotes (\\\") to denote them as delimited identifiers.\\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\\nPay attention to use date('now') function to get the current date, if the question involves \\\"today\\\".\\n\\nUse the following format:\\n\\nQuestion: Question here\\nSQLQuery: SQL Query to run\\nSQLResult: Result of the SQLQuery\\nAnswer: Final answer here\\n\\nOnly use the following tables:\\n\\nCREATE TABLE account_customuser (\\n\\tid INTEGER NOT NULL, \\n\\tpassword VARCHAR(128) NOT NULL, \\n\\tlast_login DATETIME, \\n\\tis_superuser BOOLEAN NOT NULL, \\n\\tfirst_name VARCHAR(150) NOT NULL, \\n\\tlast_name VARCHAR(150) NOT NULL, \\n\\tis_staff BOOLEAN NOT NULL, \\n\\tis_active BOOLEAN NOT NULL, \\n\\tdate_joined DATETIME NOT NULL, \\n\\tusername VARCHAR(250) NOT NULL, \\n\\temail VARCHAR(250) NOT NULL, \\n\\tuser_type VARCHAR(10) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from account_customuser table:\\nid\\tpassword\\tlast_login\\tis_superuser\\tfirst_name\\tlast_name\\tis_staff\\tis_active\\tdate_joined\\tusername\\temail\\tuser_type\\n1\\tpbkdf2_sha256$600000$FgOg3JzQKsGeiFfanFVf8Y$QX3hjZX1NVk8LwSFfaZF0mcHg/KlP7bGj4v04XLOEt8=\\t2023-07-10 09:05:29.081575\\tTrue\\t\\t\\tTrue\\tTrue\\t2023-07-08 18:22:31.467093\\traj\\trajsingh08471@gmail.com\\t1\\n6\\tpbkdf2_sha256$600000$L71fucrnRwXSBtcWaEjzs0$JEQmi9HGuyx/YibaOEidIy42BqTiqSHk2g7DdWpQmJA=\\t2023-07-10 09:06:01.224383\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:01:15.881449\\tRaj\\treere@gmail.com\\t2\\n7\\tpbkdf2_sha256$600000$USB6yexgL8pZs1PWqrVmoX$e7GZVHlyS64MNH0qnL10hDjkrRPgAKjYvz/ufE7vvAI=\\t2023-07-10 06:31:35.581883\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:08:41.107546\\tSheetal\\tsheetal@gmail.com\\t1\\n*/\\n\\n\\nCREATE TABLE account_customuser_groups (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_groups table:\\nid\\tcustomuser_id\\tgroup_id\\n\\n*/\\n\\n\\nCREATE TABLE account_customuser_user_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_user_permissions table:\\nid\\tcustomuser_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobapplication (\\n\\tid INTEGER NOT NULL, \\n\\tresume VARCHAR(100) NOT NULL, \\n\\tapplication_date DATE NOT NULL, \\n\\tapplicant_id BIGINT NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id), \\n\\tFOREIGN KEY(applicant_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_jobapplication table:\\nid\\tresume\\tapplication_date\\tapplicant_id\\tjob_id\\n30\\tresumes/Black_and_Yellow_Professional_CV_Resume_qMjzEZg.pdf\\t2023-07-10\\t6\\t1\\n31\\tresumes/Black_and_Yellow_Professional_CV_Resume_Xwxj1kN.pdf\\t2023-07-10\\t6\\t1\\n32\\tresumes/Black_and_Yellow_Professional_CV_Resume_qljBJQ4.pdf\\t2023-07-10\\t6\\t1\\n*/\\n\\n\\nCREATE TABLE account_jobinsightdata (\\n\\tid INTEGER NOT NULL, \\n\\tcsv_file VARCHAR(100) NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id)\\n)\\n\\n/*\\n3 rows from account_jobinsightdata table:\\nid\\tcsv_file\\tjob_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobpost (\\n\\tid INTEGER NOT NULL, \\n\\tjob_title VARCHAR(250) NOT NULL, \\n\\tjob_description TEXT NOT NULL, \\n\\tjob_location VARCHAR(250) NOT NULL, \\n\\tjob_salary VARCHAR(250) NOT NULL, \\n\\tjob_experience VARCHAR(250) NOT NULL, \\n\\tjob_qualification VARCHAR(250) NOT NULL, \\n\\tjob_posted_on DATE NOT NULL, \\n\\tjob_type VARCHAR(250) NOT NULL, \\n\\tjob_posted_by_id BIGINT NOT NULL, \\n\\tjob_data TEXT, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_posted_by_id) REFERENCES account_customuser (id), \\n\\tCHECK ((JSON_VALID(\\\"job_data\\\") OR \\\"job_data\\\" IS NULL)))\\n)\\n\\n/*\\n3 rows from account_jobpost table:\\nid\\tjob_title\\tjob_description\\tjob_location\\tjob_salary\\tjob_experience\\tjob_qualification\\tjob_posted_on\\tjob_type\\tjob_posted_by_id\\tjob_data\\n1\\tDjango Developer\\tI need a Django Developer\\tGovandi\\t45000\\t5+\\t5 years in Django\\t2023-07-09\\tPart-time\\t7\\tNone\\n*/\\n\\n\\nCREATE TABLE auth_group (\\n\\tid INTEGER NOT NULL, \\n\\tname VARCHAR(150) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from auth_group table:\\nid\\tname\\n\\n*/\\n\\n\\nCREATE TABLE auth_group_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id)\\n)\\n\\n/*\\n3 rows from auth_group_permissions table:\\nid\\tgroup_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE auth_permission (\\n\\tid INTEGER NOT NULL, \\n\\tcontent_type_id INTEGER NOT NULL, \\n\\tcodename VARCHAR(100) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id)\\n)\\n\\n/*\\n3 rows from auth_permission table:\\nid\\tcontent_type_id\\tcodename\\tname\\n1\\t1\\tadd_logentry\\tCan add log entry\\n2\\t1\\tchange_logentry\\tCan change log entry\\n3\\t1\\tdelete_logentry\\tCan delete log entry\\n*/\\n\\n\\nCREATE TABLE django_admin_log (\\n\\tid INTEGER NOT NULL, \\n\\tobject_id TEXT, \\n\\tobject_repr VARCHAR(200) NOT NULL, \\n\\taction_flag INTEGER NOT NULL, \\n\\tchange_message TEXT NOT NULL, \\n\\tcontent_type_id INTEGER, \\n\\tuser_id BIGINT NOT NULL, \\n\\taction_time DATETIME NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(user_id) REFERENCES account_customuser (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id), \\n\\tCHECK (\\\"action_flag\\\" >= 0), \\\"change_message\\\" text NOT NULL, \\\"content_type_id\\\" integer NULL REFERENCES \\\"django_content_type\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"user_id\\\" bigint NOT NULL REFERENCES \\\"account_customuser\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"action_time\\\" datetime NOT NULL)\\n)\\n\\n/*\\n3 rows from django_admin_log table:\\nid\\tobject_id\\tobject_repr\\taction_flag\\tchange_message\\tcontent_type_id\\tuser_id\\taction_time\\n1\\t2\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:49:40.506625\\n2\\t3\\tRak\\t3\\t\\t6\\t1\\t2023-07-09 06:55:29.607780\\n3\\t4\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:58:11.227619\\n*/\\n\\n\\nCREATE TABLE django_content_type (\\n\\tid INTEGER NOT NULL, \\n\\tapp_label VARCHAR(100) NOT NULL, \\n\\tmodel VARCHAR(100) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_content_type table:\\nid\\tapp_label\\tmodel\\n1\\tadmin\\tlogentry\\n2\\tauth\\tpermission\\n3\\tauth\\tgroup\\n*/\\n\\n\\nCREATE TABLE django_migrations (\\n\\tid INTEGER NOT NULL, \\n\\tapp VARCHAR(255) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tapplied DATETIME NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_migrations table:\\nid\\tapp\\tname\\tapplied\\n1\\tcontenttypes\\t0001_initial\\t2023-07-08 18:16:49.349262\\n2\\tcontenttypes\\t0002_remove_content_type_name\\t2023-07-08 18:16:49.364222\\n3\\tauth\\t0001_initial\\t2023-07-08 18:16:49.384214\\n*/\\n\\n\\nCREATE TABLE django_session (\\n\\tsession_key VARCHAR(40) NOT NULL, \\n\\tsession_data TEXT NOT NULL, \\n\\texpire_date DATETIME NOT NULL, \\n\\tPRIMARY KEY (session_key)\\n)\\n\\n/*\\n3 rows from django_session table:\\nsession_key\\tsession_data\\texpire_date\\nmtm5nhhp9cynbtklsc31cqhvj83gasmd\\t.eJxVjEEOwiAQRe_C2hCGKWJduu8ZyAxDpWogKe3KeHfbpAvdvvf-f6tA65LD2tIcJlFX5dXplzHFZyq7kAeVe9WxlmWeWO-JPmz\\t2023-07-23 15:11:31.450731\\nffdn0e0f0sppmenlq1vqbbgwwjjuvxvs\\t.eJxVjDsOwjAQBe_iGlnW-k9Jzxms3bWDA8iW4qRC3B0ipYD2zcx7iYTbWtM2ypLmLM4iiNPvRsiP0naQ79huXXJv6zKT3BV50CG\\t2023-07-24 05:41:11.239800\\n33wsqwjt8057at7bi0zfx1063zmvsbim\\t.eJxVjEEOwiAQRe_C2hBmiiAu3XuGZmAGqRpISrsy3l2bdKHb_977LzXSupRx7TKPE6uzAnX43SKlh9QN8J3qrenU6jJPUW-K3mn\\t2023-07-24 05:43:32.696079\\n*/\\n\\nQuestion: How many postings from from Govandi there?\\nSQLQuery:SELECT COUNT(*) FROM account_jobpost WHERE job_location = 'Govandi';\\nSQLResult: [(1,)]\\nAnswer:\"]}, \"outputs\": {\"generations\": [[{\"text\": \" There is 1 posting from Govandi.\", \"generation_info\": {\"finish_reason\": \"stop\", \"logprobs\": null}}]], \"llm_output\": {\"token_usage\": {\"total_tokens\": 3366, \"completion_tokens\": 8, \"prompt_tokens\": 3358}, \"model_name\": \"text-davinci-003\"}, \"run\": null}, \"_kind\": \"OpenAI\", \"temperature\": 0.0, \"verbose\": true}}}}", "root_span_dumps": "{\"span_id\": \"1ff2584b-2933-406b-a64e-22041a7e0b13\", \"name\": \"SQLDatabaseChain\", \"start_time_ms\": 1690072937076, \"end_time_ms\": 1690072938982, \"status_code\": \"SUCCESS\", \"status_message\": null, \"attributes\": {\"execution_order\": 1}, \"results\": [{\"inputs\": {\"query\": \"How many postings from from Govandi there?\"}, \"outputs\": {\"result\": \"There is 1 posting from Govandi.\"}}], \"child_spans\": [{\"span_id\": \"7f07baca-3e6f-4783-af56-4fb2ac8110d6\", \"name\": \"LLMChain\", \"start_time_ms\": 1690072937087, \"end_time_ms\": 1690072938175, \"status_code\": \"SUCCESS\", \"status_message\": null, \"attributes\": {\"execution_order\": 2}, \"results\": [{\"inputs\": {\"input\": \"How many postings from from Govandi there?\\nSQLQuery:\", \"top_k\": \"5\", \"dialect\": \"sqlite\", \"table_info\": \"\\nCREATE TABLE account_customuser (\\n\\tid INTEGER NOT NULL, \\n\\tpassword VARCHAR(128) NOT NULL, \\n\\tlast_login DATETIME, \\n\\tis_superuser BOOLEAN NOT NULL, \\n\\tfirst_name VARCHAR(150) NOT NULL, \\n\\tlast_name VARCHAR(150) NOT NULL, \\n\\tis_staff BOOLEAN NOT NULL, \\n\\tis_active BOOLEAN NOT NULL, \\n\\tdate_joined DATETIME NOT NULL, \\n\\tusername VARCHAR(250) NOT NULL, \\n\\temail VARCHAR(250) NOT NULL, \\n\\tuser_type VARCHAR(10) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from account_customuser table:\\nid\\tpassword\\tlast_login\\tis_superuser\\tfirst_name\\tlast_name\\tis_staff\\tis_active\\tdate_joined\\tusername\\temail\\tuser_type\\n1\\tpbkdf2_sha256$600000$FgOg3JzQKsGeiFfanFVf8Y$QX3hjZX1NVk8LwSFfaZF0mcHg/KlP7bGj4v04XLOEt8=\\t2023-07-10 09:05:29.081575\\tTrue\\t\\t\\tTrue\\tTrue\\t2023-07-08 18:22:31.467093\\traj\\trajsingh08471@gmail.com\\t1\\n6\\tpbkdf2_sha256$600000$L71fucrnRwXSBtcWaEjzs0$JEQmi9HGuyx/YibaOEidIy42BqTiqSHk2g7DdWpQmJA=\\t2023-07-10 09:06:01.224383\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:01:15.881449\\tRaj\\treere@gmail.com\\t2\\n7\\tpbkdf2_sha256$600000$USB6yexgL8pZs1PWqrVmoX$e7GZVHlyS64MNH0qnL10hDjkrRPgAKjYvz/ufE7vvAI=\\t2023-07-10 06:31:35.581883\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:08:41.107546\\tSheetal\\tsheetal@gmail.com\\t1\\n*/\\n\\n\\nCREATE TABLE account_customuser_groups (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_groups table:\\nid\\tcustomuser_id\\tgroup_id\\n\\n*/\\n\\n\\nCREATE TABLE account_customuser_user_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_user_permissions table:\\nid\\tcustomuser_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobapplication (\\n\\tid INTEGER NOT NULL, \\n\\tresume VARCHAR(100) NOT NULL, \\n\\tapplication_date DATE NOT NULL, \\n\\tapplicant_id BIGINT NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id), \\n\\tFOREIGN KEY(applicant_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_jobapplication table:\\nid\\tresume\\tapplication_date\\tapplicant_id\\tjob_id\\n30\\tresumes/Black_and_Yellow_Professional_CV_Resume_qMjzEZg.pdf\\t2023-07-10\\t6\\t1\\n31\\tresumes/Black_and_Yellow_Professional_CV_Resume_Xwxj1kN.pdf\\t2023-07-10\\t6\\t1\\n32\\tresumes/Black_and_Yellow_Professional_CV_Resume_qljBJQ4.pdf\\t2023-07-10\\t6\\t1\\n*/\\n\\n\\nCREATE TABLE account_jobinsightdata (\\n\\tid INTEGER NOT NULL, \\n\\tcsv_file VARCHAR(100) NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id)\\n)\\n\\n/*\\n3 rows from account_jobinsightdata table:\\nid\\tcsv_file\\tjob_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobpost (\\n\\tid INTEGER NOT NULL, \\n\\tjob_title VARCHAR(250) NOT NULL, \\n\\tjob_description TEXT NOT NULL, \\n\\tjob_location VARCHAR(250) NOT NULL, \\n\\tjob_salary VARCHAR(250) NOT NULL, \\n\\tjob_experience VARCHAR(250) NOT NULL, \\n\\tjob_qualification VARCHAR(250) NOT NULL, \\n\\tjob_posted_on DATE NOT NULL, \\n\\tjob_type VARCHAR(250) NOT NULL, \\n\\tjob_posted_by_id BIGINT NOT NULL, \\n\\tjob_data TEXT, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_posted_by_id) REFERENCES account_customuser (id), \\n\\tCHECK ((JSON_VALID(\\\"job_data\\\") OR \\\"job_data\\\" IS NULL)))\\n)\\n\\n/*\\n3 rows from account_jobpost table:\\nid\\tjob_title\\tjob_description\\tjob_location\\tjob_salary\\tjob_experience\\tjob_qualification\\tjob_posted_on\\tjob_type\\tjob_posted_by_id\\tjob_data\\n1\\tDjango Developer\\tI need a Django Developer\\tGovandi\\t45000\\t5+\\t5 years in Django\\t2023-07-09\\tPart-time\\t7\\tNone\\n*/\\n\\n\\nCREATE TABLE auth_group (\\n\\tid INTEGER NOT NULL, \\n\\tname VARCHAR(150) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from auth_group table:\\nid\\tname\\n\\n*/\\n\\n\\nCREATE TABLE auth_group_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id)\\n)\\n\\n/*\\n3 rows from auth_group_permissions table:\\nid\\tgroup_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE auth_permission (\\n\\tid INTEGER NOT NULL, \\n\\tcontent_type_id INTEGER NOT NULL, \\n\\tcodename VARCHAR(100) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id)\\n)\\n\\n/*\\n3 rows from auth_permission table:\\nid\\tcontent_type_id\\tcodename\\tname\\n1\\t1\\tadd_logentry\\tCan add log entry\\n2\\t1\\tchange_logentry\\tCan change log entry\\n3\\t1\\tdelete_logentry\\tCan delete log entry\\n*/\\n\\n\\nCREATE TABLE django_admin_log (\\n\\tid INTEGER NOT NULL, \\n\\tobject_id TEXT, \\n\\tobject_repr VARCHAR(200) NOT NULL, \\n\\taction_flag INTEGER NOT NULL, \\n\\tchange_message TEXT NOT NULL, \\n\\tcontent_type_id INTEGER, \\n\\tuser_id BIGINT NOT NULL, \\n\\taction_time DATETIME NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(user_id) REFERENCES account_customuser (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id), \\n\\tCHECK (\\\"action_flag\\\" >= 0), \\\"change_message\\\" text NOT NULL, \\\"content_type_id\\\" integer NULL REFERENCES \\\"django_content_type\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"user_id\\\" bigint NOT NULL REFERENCES \\\"account_customuser\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"action_time\\\" datetime NOT NULL)\\n)\\n\\n/*\\n3 rows from django_admin_log table:\\nid\\tobject_id\\tobject_repr\\taction_flag\\tchange_message\\tcontent_type_id\\tuser_id\\taction_time\\n1\\t2\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:49:40.506625\\n2\\t3\\tRak\\t3\\t\\t6\\t1\\t2023-07-09 06:55:29.607780\\n3\\t4\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:58:11.227619\\n*/\\n\\n\\nCREATE TABLE django_content_type (\\n\\tid INTEGER NOT NULL, \\n\\tapp_label VARCHAR(100) NOT NULL, \\n\\tmodel VARCHAR(100) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_content_type table:\\nid\\tapp_label\\tmodel\\n1\\tadmin\\tlogentry\\n2\\tauth\\tpermission\\n3\\tauth\\tgroup\\n*/\\n\\n\\nCREATE TABLE django_migrations (\\n\\tid INTEGER NOT NULL, \\n\\tapp VARCHAR(255) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tapplied DATETIME NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_migrations table:\\nid\\tapp\\tname\\tapplied\\n1\\tcontenttypes\\t0001_initial\\t2023-07-08 18:16:49.349262\\n2\\tcontenttypes\\t0002_remove_content_type_name\\t2023-07-08 18:16:49.364222\\n3\\tauth\\t0001_initial\\t2023-07-08 18:16:49.384214\\n*/\\n\\n\\nCREATE TABLE django_session (\\n\\tsession_key VARCHAR(40) NOT NULL, \\n\\tsession_data TEXT NOT NULL, \\n\\texpire_date DATETIME NOT NULL, \\n\\tPRIMARY KEY (session_key)\\n)\\n\\n/*\\n3 rows from django_session table:\\nsession_key\\tsession_data\\texpire_date\\nmtm5nhhp9cynbtklsc31cqhvj83gasmd\\t.eJxVjEEOwiAQRe_C2hCGKWJduu8ZyAxDpWogKe3KeHfbpAvdvvf-f6tA65LD2tIcJlFX5dXplzHFZyq7kAeVe9WxlmWeWO-JPmz\\t2023-07-23 15:11:31.450731\\nffdn0e0f0sppmenlq1vqbbgwwjjuvxvs\\t.eJxVjDsOwjAQBe_iGlnW-k9Jzxms3bWDA8iW4qRC3B0ipYD2zcx7iYTbWtM2ypLmLM4iiNPvRsiP0naQ79huXXJv6zKT3BV50CG\\t2023-07-24 05:41:11.239800\\n33wsqwjt8057at7bi0zfx1063zmvsbim\\t.eJxVjEEOwiAQRe_C2hBmiiAu3XuGZmAGqRpISrsy3l2bdKHb_977LzXSupRx7TKPE6uzAnX43SKlh9QN8J3qrenU6jJPUW-K3mn\\t2023-07-24 05:43:32.696079\\n*/\", \"stop\": [\"\\nSQLResult:\"]}, \"outputs\": {\"text\": \" SELECT COUNT(*) FROM account_jobpost WHERE job_location = 'Govandi';\"}}], \"child_spans\": [{\"span_id\": \"29ba8f1c-9710-4d28-8a64-a6f19f63cc2e\", \"name\": \"OpenAI\", \"start_time_ms\": 1690072937089, \"end_time_ms\": 1690072938175, \"status_code\": \"SUCCESS\", \"status_message\": null, \"attributes\": {\"invocation_params\": {\"model_name\": \"text-davinci-003\", \"temperature\": 0.0, \"max_tokens\": 256, \"top_p\": 1, \"frequency_penalty\": 0, \"presence_penalty\": 0, \"n\": 1, \"request_timeout\": null, \"logit_bias\": {}, \"_type\": \"openai\", \"stop\": [\"\\nSQLResult:\"]}, \"options\": {\"stop\": [\"\\nSQLResult:\"]}, \"execution_order\": 3, \"llm_output\": {\"token_usage\": {\"total_tokens\": 3347, \"completion_tokens\": 19, \"prompt_tokens\": 3328}, \"model_name\": \"text-davinci-003\"}}, \"results\": [{\"inputs\": {\"prompt\": \"You are a SQLite expert. Given an input question, first create a syntactically correct SQLite query to run, then look at the results of the query and return the answer to the input question.\\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per SQLite. You can order the results to return the most informative data in the database.\\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in double quotes (\\\") to denote them as delimited identifiers.\\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\\nPay attention to use date('now') function to get the current date, if the question involves \\\"today\\\".\\n\\nUse the following format:\\n\\nQuestion: Question here\\nSQLQuery: SQL Query to run\\nSQLResult: Result of the SQLQuery\\nAnswer: Final answer here\\n\\nOnly use the following tables:\\n\\nCREATE TABLE account_customuser (\\n\\tid INTEGER NOT NULL, \\n\\tpassword VARCHAR(128) NOT NULL, \\n\\tlast_login DATETIME, \\n\\tis_superuser BOOLEAN NOT NULL, \\n\\tfirst_name VARCHAR(150) NOT NULL, \\n\\tlast_name VARCHAR(150) NOT NULL, \\n\\tis_staff BOOLEAN NOT NULL, \\n\\tis_active BOOLEAN NOT NULL, \\n\\tdate_joined DATETIME NOT NULL, \\n\\tusername VARCHAR(250) NOT NULL, \\n\\temail VARCHAR(250) NOT NULL, \\n\\tuser_type VARCHAR(10) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from account_customuser table:\\nid\\tpassword\\tlast_login\\tis_superuser\\tfirst_name\\tlast_name\\tis_staff\\tis_active\\tdate_joined\\tusername\\temail\\tuser_type\\n1\\tpbkdf2_sha256$600000$FgOg3JzQKsGeiFfanFVf8Y$QX3hjZX1NVk8LwSFfaZF0mcHg/KlP7bGj4v04XLOEt8=\\t2023-07-10 09:05:29.081575\\tTrue\\t\\t\\tTrue\\tTrue\\t2023-07-08 18:22:31.467093\\traj\\trajsingh08471@gmail.com\\t1\\n6\\tpbkdf2_sha256$600000$L71fucrnRwXSBtcWaEjzs0$JEQmi9HGuyx/YibaOEidIy42BqTiqSHk2g7DdWpQmJA=\\t2023-07-10 09:06:01.224383\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:01:15.881449\\tRaj\\treere@gmail.com\\t2\\n7\\tpbkdf2_sha256$600000$USB6yexgL8pZs1PWqrVmoX$e7GZVHlyS64MNH0qnL10hDjkrRPgAKjYvz/ufE7vvAI=\\t2023-07-10 06:31:35.581883\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:08:41.107546\\tSheetal\\tsheetal@gmail.com\\t1\\n*/\\n\\n\\nCREATE TABLE account_customuser_groups (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_groups table:\\nid\\tcustomuser_id\\tgroup_id\\n\\n*/\\n\\n\\nCREATE TABLE account_customuser_user_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_user_permissions table:\\nid\\tcustomuser_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobapplication (\\n\\tid INTEGER NOT NULL, \\n\\tresume VARCHAR(100) NOT NULL, \\n\\tapplication_date DATE NOT NULL, \\n\\tapplicant_id BIGINT NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id), \\n\\tFOREIGN KEY(applicant_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_jobapplication table:\\nid\\tresume\\tapplication_date\\tapplicant_id\\tjob_id\\n30\\tresumes/Black_and_Yellow_Professional_CV_Resume_qMjzEZg.pdf\\t2023-07-10\\t6\\t1\\n31\\tresumes/Black_and_Yellow_Professional_CV_Resume_Xwxj1kN.pdf\\t2023-07-10\\t6\\t1\\n32\\tresumes/Black_and_Yellow_Professional_CV_Resume_qljBJQ4.pdf\\t2023-07-10\\t6\\t1\\n*/\\n\\n\\nCREATE TABLE account_jobinsightdata (\\n\\tid INTEGER NOT NULL, \\n\\tcsv_file VARCHAR(100) NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id)\\n)\\n\\n/*\\n3 rows from account_jobinsightdata table:\\nid\\tcsv_file\\tjob_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobpost (\\n\\tid INTEGER NOT NULL, \\n\\tjob_title VARCHAR(250) NOT NULL, \\n\\tjob_description TEXT NOT NULL, \\n\\tjob_location VARCHAR(250) NOT NULL, \\n\\tjob_salary VARCHAR(250) NOT NULL, \\n\\tjob_experience VARCHAR(250) NOT NULL, \\n\\tjob_qualification VARCHAR(250) NOT NULL, \\n\\tjob_posted_on DATE NOT NULL, \\n\\tjob_type VARCHAR(250) NOT NULL, \\n\\tjob_posted_by_id BIGINT NOT NULL, \\n\\tjob_data TEXT, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_posted_by_id) REFERENCES account_customuser (id), \\n\\tCHECK ((JSON_VALID(\\\"job_data\\\") OR \\\"job_data\\\" IS NULL)))\\n)\\n\\n/*\\n3 rows from account_jobpost table:\\nid\\tjob_title\\tjob_description\\tjob_location\\tjob_salary\\tjob_experience\\tjob_qualification\\tjob_posted_on\\tjob_type\\tjob_posted_by_id\\tjob_data\\n1\\tDjango Developer\\tI need a Django Developer\\tGovandi\\t45000\\t5+\\t5 years in Django\\t2023-07-09\\tPart-time\\t7\\tNone\\n*/\\n\\n\\nCREATE TABLE auth_group (\\n\\tid INTEGER NOT NULL, \\n\\tname VARCHAR(150) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from auth_group table:\\nid\\tname\\n\\n*/\\n\\n\\nCREATE TABLE auth_group_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id)\\n)\\n\\n/*\\n3 rows from auth_group_permissions table:\\nid\\tgroup_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE auth_permission (\\n\\tid INTEGER NOT NULL, \\n\\tcontent_type_id INTEGER NOT NULL, \\n\\tcodename VARCHAR(100) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id)\\n)\\n\\n/*\\n3 rows from auth_permission table:\\nid\\tcontent_type_id\\tcodename\\tname\\n1\\t1\\tadd_logentry\\tCan add log entry\\n2\\t1\\tchange_logentry\\tCan change log entry\\n3\\t1\\tdelete_logentry\\tCan delete log entry\\n*/\\n\\n\\nCREATE TABLE django_admin_log (\\n\\tid INTEGER NOT NULL, \\n\\tobject_id TEXT, \\n\\tobject_repr VARCHAR(200) NOT NULL, \\n\\taction_flag INTEGER NOT NULL, \\n\\tchange_message TEXT NOT NULL, \\n\\tcontent_type_id INTEGER, \\n\\tuser_id BIGINT NOT NULL, \\n\\taction_time DATETIME NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(user_id) REFERENCES account_customuser (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id), \\n\\tCHECK (\\\"action_flag\\\" >= 0), \\\"change_message\\\" text NOT NULL, \\\"content_type_id\\\" integer NULL REFERENCES \\\"django_content_type\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"user_id\\\" bigint NOT NULL REFERENCES \\\"account_customuser\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"action_time\\\" datetime NOT NULL)\\n)\\n\\n/*\\n3 rows from django_admin_log table:\\nid\\tobject_id\\tobject_repr\\taction_flag\\tchange_message\\tcontent_type_id\\tuser_id\\taction_time\\n1\\t2\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:49:40.506625\\n2\\t3\\tRak\\t3\\t\\t6\\t1\\t2023-07-09 06:55:29.607780\\n3\\t4\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:58:11.227619\\n*/\\n\\n\\nCREATE TABLE django_content_type (\\n\\tid INTEGER NOT NULL, \\n\\tapp_label VARCHAR(100) NOT NULL, \\n\\tmodel VARCHAR(100) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_content_type table:\\nid\\tapp_label\\tmodel\\n1\\tadmin\\tlogentry\\n2\\tauth\\tpermission\\n3\\tauth\\tgroup\\n*/\\n\\n\\nCREATE TABLE django_migrations (\\n\\tid INTEGER NOT NULL, \\n\\tapp VARCHAR(255) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tapplied DATETIME NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_migrations table:\\nid\\tapp\\tname\\tapplied\\n1\\tcontenttypes\\t0001_initial\\t2023-07-08 18:16:49.349262\\n2\\tcontenttypes\\t0002_remove_content_type_name\\t2023-07-08 18:16:49.364222\\n3\\tauth\\t0001_initial\\t2023-07-08 18:16:49.384214\\n*/\\n\\n\\nCREATE TABLE django_session (\\n\\tsession_key VARCHAR(40) NOT NULL, \\n\\tsession_data TEXT NOT NULL, \\n\\texpire_date DATETIME NOT NULL, \\n\\tPRIMARY KEY (session_key)\\n)\\n\\n/*\\n3 rows from django_session table:\\nsession_key\\tsession_data\\texpire_date\\nmtm5nhhp9cynbtklsc31cqhvj83gasmd\\t.eJxVjEEOwiAQRe_C2hCGKWJduu8ZyAxDpWogKe3KeHfbpAvdvvf-f6tA65LD2tIcJlFX5dXplzHFZyq7kAeVe9WxlmWeWO-JPmz\\t2023-07-23 15:11:31.450731\\nffdn0e0f0sppmenlq1vqbbgwwjjuvxvs\\t.eJxVjDsOwjAQBe_iGlnW-k9Jzxms3bWDA8iW4qRC3B0ipYD2zcx7iYTbWtM2ypLmLM4iiNPvRsiP0naQ79huXXJv6zKT3BV50CG\\t2023-07-24 05:41:11.239800\\n33wsqwjt8057at7bi0zfx1063zmvsbim\\t.eJxVjEEOwiAQRe_C2hBmiiAu3XuGZmAGqRpISrsy3l2bdKHb_977LzXSupRx7TKPE6uzAnX43SKlh9QN8J3qrenU6jJPUW-K3mn\\t2023-07-24 05:43:32.696079\\n*/\\n\\nQuestion: How many postings from from Govandi there?\\nSQLQuery:\"}, \"outputs\": {\"gen_0\": \" SELECT COUNT(*) FROM account_jobpost WHERE job_location = 'Govandi';\"}}], \"child_spans\": null, \"span_kind\": \"LLM\"}], \"span_kind\": \"CHAIN\"}, {\"span_id\": \"2e9946c4-98b5-45d8-acfe-b554dbc97ff2\", \"name\": \"LLMChain\", \"start_time_ms\": 1690072938176, \"end_time_ms\": 1690072938980, \"status_code\": \"SUCCESS\", \"status_message\": null, \"attributes\": {\"execution_order\": 4}, \"results\": [{\"inputs\": {\"input\": \"How many postings from from Govandi there?\\nSQLQuery:SELECT COUNT(*) FROM account_jobpost WHERE job_location = 'Govandi';\\nSQLResult: [(1,)]\\nAnswer:\", \"top_k\": \"5\", \"dialect\": \"sqlite\", \"table_info\": \"\\nCREATE TABLE account_customuser (\\n\\tid INTEGER NOT NULL, \\n\\tpassword VARCHAR(128) NOT NULL, \\n\\tlast_login DATETIME, \\n\\tis_superuser BOOLEAN NOT NULL, \\n\\tfirst_name VARCHAR(150) NOT NULL, \\n\\tlast_name VARCHAR(150) NOT NULL, \\n\\tis_staff BOOLEAN NOT NULL, \\n\\tis_active BOOLEAN NOT NULL, \\n\\tdate_joined DATETIME NOT NULL, \\n\\tusername VARCHAR(250) NOT NULL, \\n\\temail VARCHAR(250) NOT NULL, \\n\\tuser_type VARCHAR(10) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from account_customuser table:\\nid\\tpassword\\tlast_login\\tis_superuser\\tfirst_name\\tlast_name\\tis_staff\\tis_active\\tdate_joined\\tusername\\temail\\tuser_type\\n1\\tpbkdf2_sha256$600000$FgOg3JzQKsGeiFfanFVf8Y$QX3hjZX1NVk8LwSFfaZF0mcHg/KlP7bGj4v04XLOEt8=\\t2023-07-10 09:05:29.081575\\tTrue\\t\\t\\tTrue\\tTrue\\t2023-07-08 18:22:31.467093\\traj\\trajsingh08471@gmail.com\\t1\\n6\\tpbkdf2_sha256$600000$L71fucrnRwXSBtcWaEjzs0$JEQmi9HGuyx/YibaOEidIy42BqTiqSHk2g7DdWpQmJA=\\t2023-07-10 09:06:01.224383\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:01:15.881449\\tRaj\\treere@gmail.com\\t2\\n7\\tpbkdf2_sha256$600000$USB6yexgL8pZs1PWqrVmoX$e7GZVHlyS64MNH0qnL10hDjkrRPgAKjYvz/ufE7vvAI=\\t2023-07-10 06:31:35.581883\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:08:41.107546\\tSheetal\\tsheetal@gmail.com\\t1\\n*/\\n\\n\\nCREATE TABLE account_customuser_groups (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_groups table:\\nid\\tcustomuser_id\\tgroup_id\\n\\n*/\\n\\n\\nCREATE TABLE account_customuser_user_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_user_permissions table:\\nid\\tcustomuser_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobapplication (\\n\\tid INTEGER NOT NULL, \\n\\tresume VARCHAR(100) NOT NULL, \\n\\tapplication_date DATE NOT NULL, \\n\\tapplicant_id BIGINT NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id), \\n\\tFOREIGN KEY(applicant_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_jobapplication table:\\nid\\tresume\\tapplication_date\\tapplicant_id\\tjob_id\\n30\\tresumes/Black_and_Yellow_Professional_CV_Resume_qMjzEZg.pdf\\t2023-07-10\\t6\\t1\\n31\\tresumes/Black_and_Yellow_Professional_CV_Resume_Xwxj1kN.pdf\\t2023-07-10\\t6\\t1\\n32\\tresumes/Black_and_Yellow_Professional_CV_Resume_qljBJQ4.pdf\\t2023-07-10\\t6\\t1\\n*/\\n\\n\\nCREATE TABLE account_jobinsightdata (\\n\\tid INTEGER NOT NULL, \\n\\tcsv_file VARCHAR(100) NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id)\\n)\\n\\n/*\\n3 rows from account_jobinsightdata table:\\nid\\tcsv_file\\tjob_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobpost (\\n\\tid INTEGER NOT NULL, \\n\\tjob_title VARCHAR(250) NOT NULL, \\n\\tjob_description TEXT NOT NULL, \\n\\tjob_location VARCHAR(250) NOT NULL, \\n\\tjob_salary VARCHAR(250) NOT NULL, \\n\\tjob_experience VARCHAR(250) NOT NULL, \\n\\tjob_qualification VARCHAR(250) NOT NULL, \\n\\tjob_posted_on DATE NOT NULL, \\n\\tjob_type VARCHAR(250) NOT NULL, \\n\\tjob_posted_by_id BIGINT NOT NULL, \\n\\tjob_data TEXT, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_posted_by_id) REFERENCES account_customuser (id), \\n\\tCHECK ((JSON_VALID(\\\"job_data\\\") OR \\\"job_data\\\" IS NULL)))\\n)\\n\\n/*\\n3 rows from account_jobpost table:\\nid\\tjob_title\\tjob_description\\tjob_location\\tjob_salary\\tjob_experience\\tjob_qualification\\tjob_posted_on\\tjob_type\\tjob_posted_by_id\\tjob_data\\n1\\tDjango Developer\\tI need a Django Developer\\tGovandi\\t45000\\t5+\\t5 years in Django\\t2023-07-09\\tPart-time\\t7\\tNone\\n*/\\n\\n\\nCREATE TABLE auth_group (\\n\\tid INTEGER NOT NULL, \\n\\tname VARCHAR(150) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from auth_group table:\\nid\\tname\\n\\n*/\\n\\n\\nCREATE TABLE auth_group_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id)\\n)\\n\\n/*\\n3 rows from auth_group_permissions table:\\nid\\tgroup_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE auth_permission (\\n\\tid INTEGER NOT NULL, \\n\\tcontent_type_id INTEGER NOT NULL, \\n\\tcodename VARCHAR(100) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id)\\n)\\n\\n/*\\n3 rows from auth_permission table:\\nid\\tcontent_type_id\\tcodename\\tname\\n1\\t1\\tadd_logentry\\tCan add log entry\\n2\\t1\\tchange_logentry\\tCan change log entry\\n3\\t1\\tdelete_logentry\\tCan delete log entry\\n*/\\n\\n\\nCREATE TABLE django_admin_log (\\n\\tid INTEGER NOT NULL, \\n\\tobject_id TEXT, \\n\\tobject_repr VARCHAR(200) NOT NULL, \\n\\taction_flag INTEGER NOT NULL, \\n\\tchange_message TEXT NOT NULL, \\n\\tcontent_type_id INTEGER, \\n\\tuser_id BIGINT NOT NULL, \\n\\taction_time DATETIME NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(user_id) REFERENCES account_customuser (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id), \\n\\tCHECK (\\\"action_flag\\\" >= 0), \\\"change_message\\\" text NOT NULL, \\\"content_type_id\\\" integer NULL REFERENCES \\\"django_content_type\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"user_id\\\" bigint NOT NULL REFERENCES \\\"account_customuser\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"action_time\\\" datetime NOT NULL)\\n)\\n\\n/*\\n3 rows from django_admin_log table:\\nid\\tobject_id\\tobject_repr\\taction_flag\\tchange_message\\tcontent_type_id\\tuser_id\\taction_time\\n1\\t2\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:49:40.506625\\n2\\t3\\tRak\\t3\\t\\t6\\t1\\t2023-07-09 06:55:29.607780\\n3\\t4\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:58:11.227619\\n*/\\n\\n\\nCREATE TABLE django_content_type (\\n\\tid INTEGER NOT NULL, \\n\\tapp_label VARCHAR(100) NOT NULL, \\n\\tmodel VARCHAR(100) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_content_type table:\\nid\\tapp_label\\tmodel\\n1\\tadmin\\tlogentry\\n2\\tauth\\tpermission\\n3\\tauth\\tgroup\\n*/\\n\\n\\nCREATE TABLE django_migrations (\\n\\tid INTEGER NOT NULL, \\n\\tapp VARCHAR(255) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tapplied DATETIME NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_migrations table:\\nid\\tapp\\tname\\tapplied\\n1\\tcontenttypes\\t0001_initial\\t2023-07-08 18:16:49.349262\\n2\\tcontenttypes\\t0002_remove_content_type_name\\t2023-07-08 18:16:49.364222\\n3\\tauth\\t0001_initial\\t2023-07-08 18:16:49.384214\\n*/\\n\\n\\nCREATE TABLE django_session (\\n\\tsession_key VARCHAR(40) NOT NULL, \\n\\tsession_data TEXT NOT NULL, \\n\\texpire_date DATETIME NOT NULL, \\n\\tPRIMARY KEY (session_key)\\n)\\n\\n/*\\n3 rows from django_session table:\\nsession_key\\tsession_data\\texpire_date\\nmtm5nhhp9cynbtklsc31cqhvj83gasmd\\t.eJxVjEEOwiAQRe_C2hCGKWJduu8ZyAxDpWogKe3KeHfbpAvdvvf-f6tA65LD2tIcJlFX5dXplzHFZyq7kAeVe9WxlmWeWO-JPmz\\t2023-07-23 15:11:31.450731\\nffdn0e0f0sppmenlq1vqbbgwwjjuvxvs\\t.eJxVjDsOwjAQBe_iGlnW-k9Jzxms3bWDA8iW4qRC3B0ipYD2zcx7iYTbWtM2ypLmLM4iiNPvRsiP0naQ79huXXJv6zKT3BV50CG\\t2023-07-24 05:41:11.239800\\n33wsqwjt8057at7bi0zfx1063zmvsbim\\t.eJxVjEEOwiAQRe_C2hBmiiAu3XuGZmAGqRpISrsy3l2bdKHb_977LzXSupRx7TKPE6uzAnX43SKlh9QN8J3qrenU6jJPUW-K3mn\\t2023-07-24 05:43:32.696079\\n*/\", \"stop\": [\"\\nSQLResult:\"]}, \"outputs\": {\"text\": \" There is 1 posting from Govandi.\"}}], \"child_spans\": [{\"span_id\": \"ea873da2-c6a4-426f-a2a0-1d37750c5e8a\", \"name\": \"OpenAI\", \"start_time_ms\": 1690072938176, \"end_time_ms\": 1690072938980, \"status_code\": \"SUCCESS\", \"status_message\": null, \"attributes\": {\"invocation_params\": {\"model_name\": \"text-davinci-003\", \"temperature\": 0.0, \"max_tokens\": 256, \"top_p\": 1, \"frequency_penalty\": 0, \"presence_penalty\": 0, \"n\": 1, \"request_timeout\": null, \"logit_bias\": {}, \"_type\": \"openai\", \"stop\": [\"\\nSQLResult:\"]}, \"options\": {\"stop\": [\"\\nSQLResult:\"]}, \"execution_order\": 5, \"llm_output\": {\"token_usage\": {\"total_tokens\": 3366, \"completion_tokens\": 8, \"prompt_tokens\": 3358}, \"model_name\": \"text-davinci-003\"}}, \"results\": [{\"inputs\": {\"prompt\": \"You are a SQLite expert. Given an input question, first create a syntactically correct SQLite query to run, then look at the results of the query and return the answer to the input question.\\nUnless the user specifies in the question a specific number of examples to obtain, query for at most 5 results using the LIMIT clause as per SQLite. You can order the results to return the most informative data in the database.\\nNever query for all columns from a table. You must query only the columns that are needed to answer the question. Wrap each column name in double quotes (\\\") to denote them as delimited identifiers.\\nPay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist. Also, pay attention to which column is in which table.\\nPay attention to use date('now') function to get the current date, if the question involves \\\"today\\\".\\n\\nUse the following format:\\n\\nQuestion: Question here\\nSQLQuery: SQL Query to run\\nSQLResult: Result of the SQLQuery\\nAnswer: Final answer here\\n\\nOnly use the following tables:\\n\\nCREATE TABLE account_customuser (\\n\\tid INTEGER NOT NULL, \\n\\tpassword VARCHAR(128) NOT NULL, \\n\\tlast_login DATETIME, \\n\\tis_superuser BOOLEAN NOT NULL, \\n\\tfirst_name VARCHAR(150) NOT NULL, \\n\\tlast_name VARCHAR(150) NOT NULL, \\n\\tis_staff BOOLEAN NOT NULL, \\n\\tis_active BOOLEAN NOT NULL, \\n\\tdate_joined DATETIME NOT NULL, \\n\\tusername VARCHAR(250) NOT NULL, \\n\\temail VARCHAR(250) NOT NULL, \\n\\tuser_type VARCHAR(10) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from account_customuser table:\\nid\\tpassword\\tlast_login\\tis_superuser\\tfirst_name\\tlast_name\\tis_staff\\tis_active\\tdate_joined\\tusername\\temail\\tuser_type\\n1\\tpbkdf2_sha256$600000$FgOg3JzQKsGeiFfanFVf8Y$QX3hjZX1NVk8LwSFfaZF0mcHg/KlP7bGj4v04XLOEt8=\\t2023-07-10 09:05:29.081575\\tTrue\\t\\t\\tTrue\\tTrue\\t2023-07-08 18:22:31.467093\\traj\\trajsingh08471@gmail.com\\t1\\n6\\tpbkdf2_sha256$600000$L71fucrnRwXSBtcWaEjzs0$JEQmi9HGuyx/YibaOEidIy42BqTiqSHk2g7DdWpQmJA=\\t2023-07-10 09:06:01.224383\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:01:15.881449\\tRaj\\treere@gmail.com\\t2\\n7\\tpbkdf2_sha256$600000$USB6yexgL8pZs1PWqrVmoX$e7GZVHlyS64MNH0qnL10hDjkrRPgAKjYvz/ufE7vvAI=\\t2023-07-10 06:31:35.581883\\tFalse\\t\\t\\tFalse\\tTrue\\t2023-07-09 07:08:41.107546\\tSheetal\\tsheetal@gmail.com\\t1\\n*/\\n\\n\\nCREATE TABLE account_customuser_groups (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_groups table:\\nid\\tcustomuser_id\\tgroup_id\\n\\n*/\\n\\n\\nCREATE TABLE account_customuser_user_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tcustomuser_id BIGINT NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(customuser_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_customuser_user_permissions table:\\nid\\tcustomuser_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobapplication (\\n\\tid INTEGER NOT NULL, \\n\\tresume VARCHAR(100) NOT NULL, \\n\\tapplication_date DATE NOT NULL, \\n\\tapplicant_id BIGINT NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id), \\n\\tFOREIGN KEY(applicant_id) REFERENCES account_customuser (id)\\n)\\n\\n/*\\n3 rows from account_jobapplication table:\\nid\\tresume\\tapplication_date\\tapplicant_id\\tjob_id\\n30\\tresumes/Black_and_Yellow_Professional_CV_Resume_qMjzEZg.pdf\\t2023-07-10\\t6\\t1\\n31\\tresumes/Black_and_Yellow_Professional_CV_Resume_Xwxj1kN.pdf\\t2023-07-10\\t6\\t1\\n32\\tresumes/Black_and_Yellow_Professional_CV_Resume_qljBJQ4.pdf\\t2023-07-10\\t6\\t1\\n*/\\n\\n\\nCREATE TABLE account_jobinsightdata (\\n\\tid INTEGER NOT NULL, \\n\\tcsv_file VARCHAR(100) NOT NULL, \\n\\tjob_id BIGINT NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_id) REFERENCES account_jobpost (id)\\n)\\n\\n/*\\n3 rows from account_jobinsightdata table:\\nid\\tcsv_file\\tjob_id\\n\\n*/\\n\\n\\nCREATE TABLE account_jobpost (\\n\\tid INTEGER NOT NULL, \\n\\tjob_title VARCHAR(250) NOT NULL, \\n\\tjob_description TEXT NOT NULL, \\n\\tjob_location VARCHAR(250) NOT NULL, \\n\\tjob_salary VARCHAR(250) NOT NULL, \\n\\tjob_experience VARCHAR(250) NOT NULL, \\n\\tjob_qualification VARCHAR(250) NOT NULL, \\n\\tjob_posted_on DATE NOT NULL, \\n\\tjob_type VARCHAR(250) NOT NULL, \\n\\tjob_posted_by_id BIGINT NOT NULL, \\n\\tjob_data TEXT, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(job_posted_by_id) REFERENCES account_customuser (id), \\n\\tCHECK ((JSON_VALID(\\\"job_data\\\") OR \\\"job_data\\\" IS NULL)))\\n)\\n\\n/*\\n3 rows from account_jobpost table:\\nid\\tjob_title\\tjob_description\\tjob_location\\tjob_salary\\tjob_experience\\tjob_qualification\\tjob_posted_on\\tjob_type\\tjob_posted_by_id\\tjob_data\\n1\\tDjango Developer\\tI need a Django Developer\\tGovandi\\t45000\\t5+\\t5 years in Django\\t2023-07-09\\tPart-time\\t7\\tNone\\n*/\\n\\n\\nCREATE TABLE auth_group (\\n\\tid INTEGER NOT NULL, \\n\\tname VARCHAR(150) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from auth_group table:\\nid\\tname\\n\\n*/\\n\\n\\nCREATE TABLE auth_group_permissions (\\n\\tid INTEGER NOT NULL, \\n\\tgroup_id INTEGER NOT NULL, \\n\\tpermission_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(permission_id) REFERENCES auth_permission (id), \\n\\tFOREIGN KEY(group_id) REFERENCES auth_group (id)\\n)\\n\\n/*\\n3 rows from auth_group_permissions table:\\nid\\tgroup_id\\tpermission_id\\n\\n*/\\n\\n\\nCREATE TABLE auth_permission (\\n\\tid INTEGER NOT NULL, \\n\\tcontent_type_id INTEGER NOT NULL, \\n\\tcodename VARCHAR(100) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id)\\n)\\n\\n/*\\n3 rows from auth_permission table:\\nid\\tcontent_type_id\\tcodename\\tname\\n1\\t1\\tadd_logentry\\tCan add log entry\\n2\\t1\\tchange_logentry\\tCan change log entry\\n3\\t1\\tdelete_logentry\\tCan delete log entry\\n*/\\n\\n\\nCREATE TABLE django_admin_log (\\n\\tid INTEGER NOT NULL, \\n\\tobject_id TEXT, \\n\\tobject_repr VARCHAR(200) NOT NULL, \\n\\taction_flag INTEGER NOT NULL, \\n\\tchange_message TEXT NOT NULL, \\n\\tcontent_type_id INTEGER, \\n\\tuser_id BIGINT NOT NULL, \\n\\taction_time DATETIME NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tFOREIGN KEY(user_id) REFERENCES account_customuser (id), \\n\\tFOREIGN KEY(content_type_id) REFERENCES django_content_type (id), \\n\\tCHECK (\\\"action_flag\\\" >= 0), \\\"change_message\\\" text NOT NULL, \\\"content_type_id\\\" integer NULL REFERENCES \\\"django_content_type\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"user_id\\\" bigint NOT NULL REFERENCES \\\"account_customuser\\\" (\\\"id\\\") DEFERRABLE INITIALLY DEFERRED, \\\"action_time\\\" datetime NOT NULL)\\n)\\n\\n/*\\n3 rows from django_admin_log table:\\nid\\tobject_id\\tobject_repr\\taction_flag\\tchange_message\\tcontent_type_id\\tuser_id\\taction_time\\n1\\t2\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:49:40.506625\\n2\\t3\\tRak\\t3\\t\\t6\\t1\\t2023-07-09 06:55:29.607780\\n3\\t4\\tRaj\\t3\\t\\t6\\t1\\t2023-07-09 06:58:11.227619\\n*/\\n\\n\\nCREATE TABLE django_content_type (\\n\\tid INTEGER NOT NULL, \\n\\tapp_label VARCHAR(100) NOT NULL, \\n\\tmodel VARCHAR(100) NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_content_type table:\\nid\\tapp_label\\tmodel\\n1\\tadmin\\tlogentry\\n2\\tauth\\tpermission\\n3\\tauth\\tgroup\\n*/\\n\\n\\nCREATE TABLE django_migrations (\\n\\tid INTEGER NOT NULL, \\n\\tapp VARCHAR(255) NOT NULL, \\n\\tname VARCHAR(255) NOT NULL, \\n\\tapplied DATETIME NOT NULL, \\n\\tPRIMARY KEY (id)\\n)\\n\\n/*\\n3 rows from django_migrations table:\\nid\\tapp\\tname\\tapplied\\n1\\tcontenttypes\\t0001_initial\\t2023-07-08 18:16:49.349262\\n2\\tcontenttypes\\t0002_remove_content_type_name\\t2023-07-08 18:16:49.364222\\n3\\tauth\\t0001_initial\\t2023-07-08 18:16:49.384214\\n*/\\n\\n\\nCREATE TABLE django_session (\\n\\tsession_key VARCHAR(40) NOT NULL, \\n\\tsession_data TEXT NOT NULL, \\n\\texpire_date DATETIME NOT NULL, \\n\\tPRIMARY KEY (session_key)\\n)\\n\\n/*\\n3 rows from django_session table:\\nsession_key\\tsession_data\\texpire_date\\nmtm5nhhp9cynbtklsc31cqhvj83gasmd\\t.eJxVjEEOwiAQRe_C2hCGKWJduu8ZyAxDpWogKe3KeHfbpAvdvvf-f6tA65LD2tIcJlFX5dXplzHFZyq7kAeVe9WxlmWeWO-JPmz\\t2023-07-23 15:11:31.450731\\nffdn0e0f0sppmenlq1vqbbgwwjjuvxvs\\t.eJxVjDsOwjAQBe_iGlnW-k9Jzxms3bWDA8iW4qRC3B0ipYD2zcx7iYTbWtM2ypLmLM4iiNPvRsiP0naQ79huXXJv6zKT3BV50CG\\t2023-07-24 05:41:11.239800\\n33wsqwjt8057at7bi0zfx1063zmvsbim\\t.eJxVjEEOwiAQRe_C2hBmiiAu3XuGZmAGqRpISrsy3l2bdKHb_977LzXSupRx7TKPE6uzAnX43SKlh9QN8J3qrenU6jJPUW-K3mn\\t2023-07-24 05:43:32.696079\\n*/\\n\\nQuestion: How many postings from from Govandi there?\\nSQLQuery:SELECT COUNT(*) FROM account_jobpost WHERE job_location = 'Govandi';\\nSQLResult: [(1,)]\\nAnswer:\"}, \"outputs\": {\"gen_0\": \" There is 1 posting from Govandi.\"}}], \"child_spans\": null, \"span_kind\": \"LLM\"}], \"span_kind\": \"CHAIN\"}], \"span_kind\": \"CHAIN\"}"}, "_timestamp": 1690092738.99024, "_runtime": 591.7691910266876, "_step": 10}