# Generated by Django 4.2.3 on 2023-07-23 15:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(max_length=250)),
                ("email", models.EmailField(max_length=250, unique=True)),
                (
                    "user_type",
                    models.IntegerField(
                        choices=[(1, "HR"), (2, "Employee")], default=1
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name="Employee_Info",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("candidate_info", models.TextField(max_length=1000)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("job_title", models.CharField(max_length=250)),
                ("job_description", models.TextField(max_length=250)),
                ("job_location", models.CharField(max_length=250)),
                ("job_experience", models.CharField(max_length=250)),
                ("job_qualification", models.CharField(max_length=250)),
                ("job_salary_range", models.CharField(max_length=250)),
                ("flexible_work_arrangements", models.BooleanField(default=False)),
                ("company_information", models.TextField(max_length=250)),
                ("job_posted_on", models.DateField(auto_now_add=True)),
                ("job_type", models.CharField(max_length=250)),
                (
                    "job_security_information",
                    models.CharField(
                        choices=[("Stable", "Stable"), ("Risky", "Risky")],
                        default="Stable",
                        max_length=250,
                    ),
                ),
                ("job_data", models.JSONField(null=True)),
                (
                    "company_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.company",
                    ),
                ),
                (
                    "job_posted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobInsightData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("csv_file", models.FileField(upload_to="csv_files")),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.jobpost",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("resume", models.FileField(upload_to="resumes")),
                (
                    "application_status",
                    models.CharField(
                        choices=[
                            ("Applied", "Applied"),
                            ("Rejected", "Rejected"),
                            ("Interview Stage", "Interview Stage"),
                            ("Job Offered", "Job Offered"),
                        ],
                        default="Applied",
                        max_length=250,
                        null=True,
                    ),
                ),
                ("communication_log", models.CharField(max_length=250, null=True)),
                (
                    "hiring_decision",
                    models.CharField(
                        choices=[
                            ("Hired", "Hired"),
                            ("Rejected", "Rejected"),
                            ("Pending", "Pending"),
                        ],
                        default="Pending",
                        max_length=250,
                        null=True,
                    ),
                ),
                ("application_date", models.DateField(auto_now_add=True)),
                (
                    "applicant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee_info",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.employee_info",
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="account.jobpost",
                    ),
                ),
            ],
        ),
    ]
